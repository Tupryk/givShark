{"ast":null,"code":"var _jsxFileName = \"/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction render_fella(_ref) {\n  _s();\n  let {\n    imageUrl\n  } = _ref;\n  const canvasRef = useRef(null);\n  const image_width = 64; // Shoud be influenced by actual size of shark\n  const image = useMemo(() => {\n    const img = new Image();\n    img.src = this.imageUrl;\n    return img;\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let x = canvas.width / 2;\n    let y = canvas.height / 2;\n    let dx = 2;\n    let dy = -2;\n    let radius = image_width / 2;\n    function drawBall() {\n      ctx.drawImage(image, x - image_width / 2, y - image_width / 2, image_width, image_width);\n    }\n    function updateBallPosition() {\n      if (x + dx > canvas.width - radius || x + dx < radius) dx = -dx;\n      if (y + dy > canvas.height - radius || y + dy < radius) dy = -dy;\n      x += dx;\n      y += dy;\n    }\n    function animate() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawBall();\n      updateBallPosition();\n      requestAnimationFrame(animate);\n    }\n    animate();\n  }, [imageUrl, image]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: window.innerWidth,\n    height: window.innerHeight\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n_s(render_fella, \"BVdR963ETjitXLYyQ42b0OlIriY=\");\nclass SharkFella extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageUrl = props.imageUrl;\n  }\n  render() {\n    return render_fella(this.imageUrl);\n  }\n}\nexport default SharkFella;","map":{"version":3,"names":["React","useRef","useEffect","useMemo","render_fella","imageUrl","canvasRef","image_width","image","img","Image","src","canvas","current","ctx","getContext","x","width","y","height","dx","dy","radius","drawBall","drawImage","updateBallPosition","animate","clearRect","requestAnimationFrame","window","innerWidth","innerHeight","SharkFella","Component","constructor","props","render"],"sources":["/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellas.js"],"sourcesContent":["import React, { useRef, useEffect, useMemo } from 'react';\n\n\nfunction render_fella({imageUrl}) {\n    const canvasRef = useRef(null);\n    \n    const image_width = 64; // Shoud be influenced by actual size of shark\n    const image = useMemo(() => {\n        const img = new Image();\n        img.src = this.imageUrl;\n        return img;\n    }, []);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n    \n        let x = canvas.width / 2;\n        let y = canvas.height / 2;\n        let dx = 2;\n        let dy = -2;\n        let radius = image_width / 2;\n    \n        function drawBall() {\n            ctx.drawImage(image, x - image_width / 2, y - image_width / 2, image_width, image_width);\n        }\n    \n        function updateBallPosition() {\n            if (x + dx > canvas.width - radius || x + dx < radius)\n                dx = -dx;\n            if (y + dy > canvas.height - radius || y + dy < radius)\n                dy = -dy;\n            x += dx;\n            y += dy;\n        }\n    \n        function animate() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            drawBall();\n            updateBallPosition();\n            requestAnimationFrame(animate);\n        }\n    \n        animate();\n    }, [imageUrl, image]);\n    \n    return <canvas ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />;\n}\n\nclass SharkFella extends React.Component {\n    constructor(props) {\n        super(props);\n        this.imageUrl = props.imageUrl;\n    }\n    render() {\n        return render_fella(this.imageUrl);\n    }\n}\n\nexport default SharkFella;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAAC;AAG1D,SAASC,YAAY,OAAa;EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC;EAC5B,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMM,WAAW,GAAG,EAAE,CAAC,CAAC;EACxB,MAAMC,KAAK,GAAGL,OAAO,CAAC,MAAM;IACxB,MAAMM,GAAG,GAAG,IAAIC,KAAK,EAAE;IACvBD,GAAG,CAACE,GAAG,GAAG,IAAI,CAACN,QAAQ;IACvB,OAAOI,GAAG;EACd,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACZ,MAAMU,MAAM,GAAGN,SAAS,CAACO,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnC,IAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAK,GAAG,CAAC;IACxB,IAAIC,CAAC,GAAGN,MAAM,CAACO,MAAM,GAAG,CAAC;IACzB,IAAIC,EAAE,GAAG,CAAC;IACV,IAAIC,EAAE,GAAG,CAAC,CAAC;IACX,IAAIC,MAAM,GAAGf,WAAW,GAAG,CAAC;IAE5B,SAASgB,QAAQ,GAAG;MAChBT,GAAG,CAACU,SAAS,CAAChB,KAAK,EAAEQ,CAAC,GAAGT,WAAW,GAAG,CAAC,EAAEW,CAAC,GAAGX,WAAW,GAAG,CAAC,EAAEA,WAAW,EAAEA,WAAW,CAAC;IAC5F;IAEA,SAASkB,kBAAkB,GAAG;MAC1B,IAAIT,CAAC,GAAGI,EAAE,GAAGR,MAAM,CAACK,KAAK,GAAGK,MAAM,IAAIN,CAAC,GAAGI,EAAE,GAAGE,MAAM,EACjDF,EAAE,GAAG,CAACA,EAAE;MACZ,IAAIF,CAAC,GAAGG,EAAE,GAAGT,MAAM,CAACO,MAAM,GAAGG,MAAM,IAAIJ,CAAC,GAAGG,EAAE,GAAGC,MAAM,EAClDD,EAAE,GAAG,CAACA,EAAE;MACZL,CAAC,IAAII,EAAE;MACPF,CAAC,IAAIG,EAAE;IACX;IAEA,SAASK,OAAO,GAAG;MACfZ,GAAG,CAACa,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEf,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACO,MAAM,CAAC;MAChDI,QAAQ,EAAE;MACVE,kBAAkB,EAAE;MACpBG,qBAAqB,CAACF,OAAO,CAAC;IAClC;IAEAA,OAAO,EAAE;EACb,CAAC,EAAE,CAACrB,QAAQ,EAAEG,KAAK,CAAC,CAAC;EAErB,oBAAO;IAAQ,GAAG,EAAEF,SAAU;IAAC,KAAK,EAAEuB,MAAM,CAACC,UAAW;IAAC,MAAM,EAAED,MAAM,CAACE;EAAY;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3F;AAAC,GA5CQ3B,YAAY;AA8CrB,MAAM4B,UAAU,SAAShC,KAAK,CAACiC,SAAS,CAAC;EACrCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC9B,QAAQ,GAAG8B,KAAK,CAAC9B,QAAQ;EAClC;EACA+B,MAAM,GAAG;IACL,OAAOhC,YAAY,CAAC,IAAI,CAACC,QAAQ,CAAC;EACtC;AACJ;AAEA,eAAe2B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}