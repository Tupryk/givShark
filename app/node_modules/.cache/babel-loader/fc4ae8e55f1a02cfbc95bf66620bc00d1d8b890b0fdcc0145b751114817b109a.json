{"ast":null,"code":"var _jsxFileName = \"/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellaCss.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport \"../css/sharkFella.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderFella(_ref) {\n  _s();\n  let {\n    imageUrl\n  } = _ref;\n  const image_width = 128; // Shoud be influenced by actual size of shark\n  const image_height = 100;\n  const [point, setPoint] = useState({\n    left: Math.random() * (window.Width - image_width),\n    top: Math.random() * (window.innerHeight - image_height)\n  });\n  let initialFlip = 1;\n  if (Math.round(Math.random()) === 0) initialFlip = -1;\n  const [flip, setFlip] = useState(initialFlip);\n  const [rotation, setRotation] = useState(0);\n  const [time_to_move, setTimeToMove] = useState(Math.random() * 2000 + 3000);\n\n  /*\n  let wable = 0;\n  let wable_amplitud = 0.07;\n  let wable_speed = 0.07;\n  let vis_h = ( image_height * (1-Math.abs( Math.sin(wable)*wable_amplitud+(1-wable_amplitud) )) ) + ( image_height*(1-wable_amplitud) ); \n  let vis_y = y - (image_width / 2) + image_height - vis_h;\n  */\n\n  const setNewPoint = useCallback(() => {\n    const newPoint = {\n      left: Math.random() * (window.innerWidth - image_width),\n      top: Math.random() * (window.innerHeight - image_height)\n    };\n    let co = newPoint.top - point.top;\n    let ca = newPoint.left - point.left;\n    let angle = Math.atan(Math.abs(co) / Math.abs(ca));\n    if (ca < 0) setFlip(1);else setFlip(-1);\n    if (co > 0 && ca < 0 || co < 0 && ca > 0) angle = Math.PI * 2 - angle;\n    setRotation(angle);\n    setPoint(newPoint);\n    setTimeToMove(Math.random() * 2000 + 3000);\n  }, [point]);\n  useEffect(() => {\n    const intervalId = setInterval(setNewPoint, time_to_move + Math.random() * time_to_move);\n    return () => clearInterval(intervalId);\n  }, [setNewPoint, time_to_move]);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"sharkFella\",\n    src: imageUrl,\n    alt: \"Moving shark\",\n    width: image_width,\n    height: image_height,\n    style: {\n      ...point,\n      transform: `rotate(${rotation}rad) scaleX(${flip})`,\n      transition: `left ${time_to_move}ms linear, top ${time_to_move}ms linear, transform 200ms ease-in-out`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n}\n_s(RenderFella, \"MUIu9tI30iMIcYckr6OkseObdg8=\");\n_c = RenderFella;\nexport default RenderFella;\nvar _c;\n$RefreshReg$(_c, \"RenderFella\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","RenderFella","imageUrl","image_width","image_height","point","setPoint","left","Math","random","window","Width","top","innerHeight","initialFlip","round","flip","setFlip","rotation","setRotation","time_to_move","setTimeToMove","setNewPoint","newPoint","innerWidth","co","ca","angle","atan","abs","PI","intervalId","setInterval","clearInterval","transform","transition"],"sources":["/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellaCss.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport \"../css/sharkFella.css\"\n\n\nfunction RenderFella({ imageUrl }) {\n    const image_width = 128; // Shoud be influenced by actual size of shark\n    const image_height = 100;\n\n    const [point, setPoint] = useState({\n        left: Math.random() * (window.Width - image_width),\n        top: Math.random() * (window.innerHeight - image_height),\n    });\n\n    let initialFlip = 1;\n    if ( Math.round( Math.random() ) === 0) initialFlip = -1;\n    const [flip, setFlip] = useState( initialFlip );\n    const [rotation, setRotation] = useState(0);\n    const [time_to_move, setTimeToMove] = useState( ( Math.random() * 2000 ) + 3000 );\n\n    /*\n    let wable = 0;\n    let wable_amplitud = 0.07;\n    let wable_speed = 0.07;\n    let vis_h = ( image_height * (1-Math.abs( Math.sin(wable)*wable_amplitud+(1-wable_amplitud) )) ) + ( image_height*(1-wable_amplitud) ); \n    let vis_y = y - (image_width / 2) + image_height - vis_h;\n    */\n\n    const setNewPoint = useCallback(() => {\n        const newPoint = {\n            left: Math.random() * (window.innerWidth - image_width),\n            top: Math.random() * (window.innerHeight - image_height),\n        };\n        let co = newPoint.top - point.top;\n        let ca = newPoint.left - point.left;\n        let angle = Math.atan(Math.abs(co) / Math.abs(ca));\n\n        if (ca < 0) setFlip(1);\n        else setFlip(-1);\n\n        if ( (co > 0 && ca < 0) || (co < 0 && ca > 0) )\n            angle = Math.PI * 2 - angle;\n        setRotation(angle);\n\n        setPoint(newPoint);\n\n        setTimeToMove( ( Math.random() * 2000 ) + 3000 );\n    }, [point]);\n\n    useEffect(() => {\n        const intervalId = setInterval(setNewPoint, time_to_move+(Math.random()*time_to_move));\n        return () => clearInterval(intervalId);\n    }, [setNewPoint, time_to_move]);\n\n    return <img\n        className=\"sharkFella\"\n        src={imageUrl}\n        alt=\"Moving shark\"\n        width={image_width}\n        height={image_height}\n        style={{\n            ...point,\n            transform: `rotate(${rotation}rad) scaleX(${flip})`,\n            transition: `left ${time_to_move}ms linear, top ${time_to_move}ms linear, transform 200ms ease-in-out` }}\n    />;\n}\n\nexport default RenderFella;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAO,uBAAuB;AAAA;AAG9B,SAASC,WAAW,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC7B,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;EACzB,MAAMC,YAAY,GAAG,GAAG;EAExB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,IAAI,EAAEC,IAAI,CAACC,MAAM,EAAE,IAAIC,MAAM,CAACC,KAAK,GAAGR,WAAW,CAAC;IAClDS,GAAG,EAAEJ,IAAI,CAACC,MAAM,EAAE,IAAIC,MAAM,CAACG,WAAW,GAAGT,YAAY;EAC3D,CAAC,CAAC;EAEF,IAAIU,WAAW,GAAG,CAAC;EACnB,IAAKN,IAAI,CAACO,KAAK,CAAEP,IAAI,CAACC,MAAM,EAAE,CAAE,KAAK,CAAC,EAAEK,WAAW,GAAG,CAAC,CAAC;EACxD,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAEe,WAAW,CAAE;EAC/C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACqB,YAAY,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAIS,IAAI,CAACC,MAAM,EAAE,GAAG,IAAI,GAAK,IAAI,CAAE;;EAEjF;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI,MAAMa,WAAW,GAAGtB,WAAW,CAAC,MAAM;IAClC,MAAMuB,QAAQ,GAAG;MACbhB,IAAI,EAAEC,IAAI,CAACC,MAAM,EAAE,IAAIC,MAAM,CAACc,UAAU,GAAGrB,WAAW,CAAC;MACvDS,GAAG,EAAEJ,IAAI,CAACC,MAAM,EAAE,IAAIC,MAAM,CAACG,WAAW,GAAGT,YAAY;IAC3D,CAAC;IACD,IAAIqB,EAAE,GAAGF,QAAQ,CAACX,GAAG,GAAGP,KAAK,CAACO,GAAG;IACjC,IAAIc,EAAE,GAAGH,QAAQ,CAAChB,IAAI,GAAGF,KAAK,CAACE,IAAI;IACnC,IAAIoB,KAAK,GAAGnB,IAAI,CAACoB,IAAI,CAACpB,IAAI,CAACqB,GAAG,CAACJ,EAAE,CAAC,GAAGjB,IAAI,CAACqB,GAAG,CAACH,EAAE,CAAC,CAAC;IAElD,IAAIA,EAAE,GAAG,CAAC,EAAET,OAAO,CAAC,CAAC,CAAC,CAAC,KAClBA,OAAO,CAAC,CAAC,CAAC,CAAC;IAEhB,IAAMQ,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAG,CAAC,IAAMD,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAG,CAAE,EACzCC,KAAK,GAAGnB,IAAI,CAACsB,EAAE,GAAG,CAAC,GAAGH,KAAK;IAC/BR,WAAW,CAACQ,KAAK,CAAC;IAElBrB,QAAQ,CAACiB,QAAQ,CAAC;IAElBF,aAAa,CAAIb,IAAI,CAACC,MAAM,EAAE,GAAG,IAAI,GAAK,IAAI,CAAE;EACpD,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEXP,SAAS,CAAC,MAAM;IACZ,MAAMiC,UAAU,GAAGC,WAAW,CAACV,WAAW,EAAEF,YAAY,GAAEZ,IAAI,CAACC,MAAM,EAAE,GAACW,YAAa,CAAC;IACtF,OAAO,MAAMa,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACT,WAAW,EAAEF,YAAY,CAAC,CAAC;EAE/B,oBAAO;IACH,SAAS,EAAC,YAAY;IACtB,GAAG,EAAElB,QAAS;IACd,GAAG,EAAC,cAAc;IAClB,KAAK,EAAEC,WAAY;IACnB,MAAM,EAAEC,YAAa;IACrB,KAAK,EAAE;MACH,GAAGC,KAAK;MACR6B,SAAS,EAAG,UAAShB,QAAS,eAAcF,IAAK,GAAE;MACnDmB,UAAU,EAAG,QAAOf,YAAa,kBAAiBA,YAAa;IAAwC;EAAE;IAAA;IAAA;IAAA;EAAA,QAC/G;AACN;AAAC,GA5DQnB,WAAW;AAAA,KAAXA,WAAW;AA8DpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}