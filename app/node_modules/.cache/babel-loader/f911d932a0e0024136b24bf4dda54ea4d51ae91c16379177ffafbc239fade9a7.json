{"ast":null,"code":"var _jsxFileName = \"/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellaCss.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderFella(_ref) {\n  _s2();\n  let {\n    imageUrl\n  } = _ref;\n  const image_width = 128; // Shoud be influenced by actual size of shark\n  const image_height = 100;\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    let intervalCounter = 0;\n    let intervalLimit = 0;\n    let intervalMaxLimit = 500;\n    let goToPoint = {\n      x: 0,\n      y: 0\n    };\n    let flipped = false;\n    let wable = 0;\n    let wable_amplitud = 0.07;\n    let wable_speed = 0.07;\n    function draw() {\n      let vis_w = image_width;\n      let vis_h = image_height * (1 - Math.abs(Math.sin(wable) * wable_amplitud + (1 - wable_amplitud))) + image_height * (1 - wable_amplitud);\n      let vis_x = x - image_width / 2;\n      let vis_y = y - image_width / 2 + image_height - vis_h;\n      console.log(\"bruh\");\n      if (flipped) {\n        /*\n        ctx.save();\n        ctx.translate(canvas.width / 2, canvas.height / 2);\n        ctx.scale(-1, 1);\n        ctx.drawImage(image, -vis_x + (canvas.width / 2) - image_width, vis_y - canvas.height / 2, vis_w, vis_h);\n        ctx.restore();\n        */\n      } else {\n        //ctx.drawImage(image, vis_x, vis_y, vis_w, vis_h);\n      }\n    }\n    function updatePosition() {\n      _s();\n      intervalCounter++;\n      wable += wable_speed;\n      if (intervalCounter >= intervalLimit) {\n        intervalCounter = 0;\n        intervalLimit = intervalMaxLimit * Math.random();\n        let new_x = Math.random() * window.innerWidth;\n        let new_y = Math.random() * window.innerHeight;\n        if (new_x < goToPoint.x) flipped = false;else flipped = true;\n        goToPoint = {\n          x: new_x,\n          y: new_y\n        };\n        const [goToX, setPointX] = useState(0);\n        setPointX(goToPoint.x);\n      }\n    }\n    _s(updatePosition, \"DNqNg2gcy9VjxD/Qg/zgfVyzLpA=\");\n    function animate() {\n      draw();\n      updatePosition();\n    }\n    animate();\n  });\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: imageUrl,\n    width: image_width,\n    height: image_height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n}\n_s2(RenderFella, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RenderFella;\nexport default RenderFella;\nvar _c;\n$RefreshReg$(_c, \"RenderFella\");","map":{"version":3,"names":["React","useEffect","useState","RenderFella","imageUrl","image_width","image_height","intervalCounter","intervalLimit","intervalMaxLimit","goToPoint","x","y","flipped","wable","wable_amplitud","wable_speed","draw","vis_w","vis_h","Math","abs","sin","vis_x","vis_y","console","log","updatePosition","random","new_x","window","innerWidth","new_y","innerHeight","goToX","setPointX","animate"],"sources":["/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellaCss.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nfunction RenderFella({ imageUrl })\n{\n    const image_width = 128; // Shoud be influenced by actual size of shark\n    const image_height = 100;\n\n    useEffect(() => {\n        let intervalCounter = 0;\n        let intervalLimit = 0;\n        let intervalMaxLimit = 500;\n\n        let goToPoint = { x: 0, y: 0 };\n\n        let flipped = false;\n\n        let wable = 0;\n        let wable_amplitud = 0.07;\n        let wable_speed = 0.07;\n    \n        function draw() {\n            let vis_w = image_width;\n            let vis_h = ( image_height * (1-Math.abs( Math.sin(wable)*wable_amplitud+(1-wable_amplitud) )) ) + ( image_height*(1-wable_amplitud) );\n            let vis_x = x - image_width / 2;\n            let vis_y = y - (image_width / 2) + image_height - vis_h;\n            console.log(\"bruh\");\n\n            if (flipped) {\n                /*\n                ctx.save();\n                ctx.translate(canvas.width / 2, canvas.height / 2);\n                ctx.scale(-1, 1);\n                ctx.drawImage(image, -vis_x + (canvas.width / 2) - image_width, vis_y - canvas.height / 2, vis_w, vis_h);\n                ctx.restore();\n                */\n            } else {\n                //ctx.drawImage(image, vis_x, vis_y, vis_w, vis_h);\n            }\n        }\n    \n        function updatePosition() {\n            intervalCounter++;\n            wable += wable_speed;\n\n            if (intervalCounter >= intervalLimit) {\n                intervalCounter = 0;\n                intervalLimit = intervalMaxLimit * Math.random();\n                let new_x = Math.random() * window.innerWidth;\n                let new_y = Math.random() * window.innerHeight;\n                if (new_x < goToPoint.x) flipped = false;\n                else flipped = true;\n                goToPoint = { x: new_x, y: new_y };\n                const [goToX, setPointX] = useState(0);\n                setPointX(goToPoint.x);\n            }\n        }\n    \n        function animate() {\n            draw();\n            updatePosition();\n        }\n    \n        animate();\n    });\n    \n    return <img src={imageUrl} width={image_width} height={image_height} />;\n}\n\nexport default RenderFella;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAGnD,SAASC,WAAW,OACpB;EAAA;EAAA,IADqB;IAAEC;EAAS,CAAC;EAE7B,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;EACzB,MAAMC,YAAY,GAAG,GAAG;EAExBL,SAAS,CAAC,MAAM;IAAA;IACZ,IAAIM,eAAe,GAAG,CAAC;IACvB,IAAIC,aAAa,GAAG,CAAC;IACrB,IAAIC,gBAAgB,GAAG,GAAG;IAE1B,IAAIC,SAAS,GAAG;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAE9B,IAAIC,OAAO,GAAG,KAAK;IAEnB,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,cAAc,GAAG,IAAI;IACzB,IAAIC,WAAW,GAAG,IAAI;IAEtB,SAASC,IAAI,GAAG;MACZ,IAAIC,KAAK,GAAGb,WAAW;MACvB,IAAIc,KAAK,GAAKb,YAAY,IAAI,CAAC,GAACc,IAAI,CAACC,GAAG,CAAED,IAAI,CAACE,GAAG,CAACR,KAAK,CAAC,GAACC,cAAc,IAAE,CAAC,GAACA,cAAc,CAAC,CAAE,CAAC,GAAOT,YAAY,IAAE,CAAC,GAACS,cAAc,CAAG;MACtI,IAAIQ,KAAK,GAAGZ,CAAC,GAAGN,WAAW,GAAG,CAAC;MAC/B,IAAImB,KAAK,GAAGZ,CAAC,GAAIP,WAAW,GAAG,CAAE,GAAGC,YAAY,GAAGa,KAAK;MACxDM,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MAEnB,IAAIb,OAAO,EAAE;QACT;AAChB;AACA;AACA;AACA;AACA;AACA;MANgB,CAOH,MAAM;QACH;MAAA;IAER;IAEA,SAASc,cAAc,GAAG;MAAA;MACtBpB,eAAe,EAAE;MACjBO,KAAK,IAAIE,WAAW;MAEpB,IAAIT,eAAe,IAAIC,aAAa,EAAE;QAClCD,eAAe,GAAG,CAAC;QACnBC,aAAa,GAAGC,gBAAgB,GAAGW,IAAI,CAACQ,MAAM,EAAE;QAChD,IAAIC,KAAK,GAAGT,IAAI,CAACQ,MAAM,EAAE,GAAGE,MAAM,CAACC,UAAU;QAC7C,IAAIC,KAAK,GAAGZ,IAAI,CAACQ,MAAM,EAAE,GAAGE,MAAM,CAACG,WAAW;QAC9C,IAAIJ,KAAK,GAAGnB,SAAS,CAACC,CAAC,EAAEE,OAAO,GAAG,KAAK,CAAC,KACpCA,OAAO,GAAG,IAAI;QACnBH,SAAS,GAAG;UAAEC,CAAC,EAAEkB,KAAK;UAAEjB,CAAC,EAAEoB;QAAM,CAAC;QAClC,MAAM,CAACE,KAAK,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;QACtCiC,SAAS,CAACzB,SAAS,CAACC,CAAC,CAAC;MAC1B;IACJ;IAAC,GAfQgB,cAAc;IAiBvB,SAASS,OAAO,GAAG;MACfnB,IAAI,EAAE;MACNU,cAAc,EAAE;IACpB;IAEAS,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,oBAAO;IAAK,GAAG,EAAEhC,QAAS;IAAC,KAAK,EAAEC,WAAY;IAAC,MAAM,EAAEC;EAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3E;AAAC,IAhEQH,WAAW;AAAA,KAAXA,WAAW;AAkEpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}