{"ast":null,"code":"var _jsxFileName = \"/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellaCss.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../css/sharkFella.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderFella(_ref) {\n  _s();\n  let {\n    imageUrl\n  } = _ref;\n  const image_width = 128; // Shoud be influenced by actual size of shark\n  const image_height = 100;\n  const [point, setPoint] = useState({\n    top: window.innerWidth * 0.5,\n    left: window.innerHeight * 0.5\n  });\n  const [rotation, setRotation] = useState(0);\n  const [flip, setFlip] = useState(1);\n  let wable = 0;\n  let wable_amplitud = 0.07;\n  let wable_speed = 0.07;\n  /*\n  let vis_w = image_width;\n  let vis_h = ( image_height * (1-Math.abs( Math.sin(wable)*wable_amplitud+(1-wable_amplitud) )) ) + ( image_height*(1-wable_amplitud) );\n  let vis_x = x - image_width / 2;\n  let vis_y = y - (image_width / 2) + image_height - vis_h;\n  */\n\n  const setNewPoint = () => {\n    const newPoint = {\n      left: Math.random() * (window.innerWidth - image_width),\n      top: Math.random() * (window.innerHeight - image_height)\n    };\n    let co = newPoint.top - point.top;\n    let ca = newPoint.left - point.left;\n    let angle = Math.atan(Math.abs(co) / Math.abs(ca));\n    if (ca < 0) setFlip(1);else setFlip(-1);\n    if (co > 0 && ca < 0 || co < 0 && ca > 0) angle = Math.PI * 2 - angle;\n    setRotation(angle);\n    setPoint(newPoint);\n  };\n  useEffect(() => {\n    const intervalId = setInterval(setNewPoint, 3000 + Math.random() * 2000);\n    return () => clearInterval(intervalId);\n  }, [point]);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"sharkFella\",\n    src: imageUrl,\n    alt: \"Moving shark\",\n    width: image_width,\n    height: image_height,\n    style: {\n      ...point,\n      transform: `rotate(${rotation}rad) scaleX(${flip})`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n_s(RenderFella, \"RzcX9mSO+oDmIrkWKcZl318gOz0=\");\n_c = RenderFella;\nexport default RenderFella;\nvar _c;\n$RefreshReg$(_c, \"RenderFella\");","map":{"version":3,"names":["React","useEffect","useState","RenderFella","imageUrl","image_width","image_height","point","setPoint","top","window","innerWidth","left","innerHeight","rotation","setRotation","flip","setFlip","wable","wable_amplitud","wable_speed","setNewPoint","newPoint","Math","random","co","ca","angle","atan","abs","PI","intervalId","setInterval","clearInterval","transform"],"sources":["/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellaCss.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"../css/sharkFella.css\"\n\n\nfunction RenderFella({ imageUrl }) {\n    const image_width = 128; // Shoud be influenced by actual size of shark\n    const image_height = 100;\n\n    const [point, setPoint] = useState({ top: window.innerWidth * 0.5, left: window.innerHeight * 0.5 });\n    const [rotation, setRotation] = useState(0);\n    const [flip, setFlip] = useState(1);\n\n    let wable = 0;\n    let wable_amplitud = 0.07;\n    let wable_speed = 0.07;\n    /*\n    let vis_w = image_width;\n    let vis_h = ( image_height * (1-Math.abs( Math.sin(wable)*wable_amplitud+(1-wable_amplitud) )) ) + ( image_height*(1-wable_amplitud) );\n    let vis_x = x - image_width / 2;\n    let vis_y = y - (image_width / 2) + image_height - vis_h;\n    */\n\n    const setNewPoint = () => {\n        const newPoint = {\n            left: Math.random() * (window.innerWidth - image_width),\n            top: Math.random() * (window.innerHeight - image_height),\n        };\n        let co = newPoint.top - point.top;\n        let ca = newPoint.left - point.left;\n        let angle = Math.atan(Math.abs(co) / Math.abs(ca));\n\n        if (ca < 0) setFlip(1);\n        else setFlip(-1);\n\n        if ( (co > 0 && ca < 0) || (co < 0 && ca > 0) )\n            angle = Math.PI * 2 - angle;\n        setRotation(angle);\n\n        setPoint(newPoint);\n    }\n\n    useEffect(() => {\n        const intervalId = setInterval(setNewPoint, 3000+(Math.random()*2000));\n        return () => clearInterval(intervalId);\n    }, [point]);\n\n    return <img\n        className=\"sharkFella\"\n        src={imageUrl}\n        alt=\"Moving shark\"\n        width={image_width}\n        height={image_height}\n        style={{ ...point, transform: `rotate(${rotation}rad) scaleX(${flip})` }}\n    />;\n}\n\nexport default RenderFella;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,uBAAuB;AAAA;AAG9B,SAASC,WAAW,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC7B,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;EACzB,MAAMC,YAAY,GAAG,GAAG;EAExB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IAAEO,GAAG,EAAEC,MAAM,CAACC,UAAU,GAAG,GAAG;IAAEC,IAAI,EAAEF,MAAM,CAACG,WAAW,GAAG;EAAI,CAAC,CAAC;EACpG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAEnC,IAAIgB,KAAK,GAAG,CAAC;EACb,IAAIC,cAAc,GAAG,IAAI;EACzB,IAAIC,WAAW,GAAG,IAAI;EACtB;AACJ;AACA;AACA;AACA;AACA;;EAEI,MAAMC,WAAW,GAAG,MAAM;IACtB,MAAMC,QAAQ,GAAG;MACbV,IAAI,EAAEW,IAAI,CAACC,MAAM,EAAE,IAAId,MAAM,CAACC,UAAU,GAAGN,WAAW,CAAC;MACvDI,GAAG,EAAEc,IAAI,CAACC,MAAM,EAAE,IAAId,MAAM,CAACG,WAAW,GAAGP,YAAY;IAC3D,CAAC;IACD,IAAImB,EAAE,GAAGH,QAAQ,CAACb,GAAG,GAAGF,KAAK,CAACE,GAAG;IACjC,IAAIiB,EAAE,GAAGJ,QAAQ,CAACV,IAAI,GAAGL,KAAK,CAACK,IAAI;IACnC,IAAIe,KAAK,GAAGJ,IAAI,CAACK,IAAI,CAACL,IAAI,CAACM,GAAG,CAACJ,EAAE,CAAC,GAAGF,IAAI,CAACM,GAAG,CAACH,EAAE,CAAC,CAAC;IAElD,IAAIA,EAAE,GAAG,CAAC,EAAET,OAAO,CAAC,CAAC,CAAC,CAAC,KAClBA,OAAO,CAAC,CAAC,CAAC,CAAC;IAEhB,IAAMQ,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAG,CAAC,IAAMD,EAAE,GAAG,CAAC,IAAIC,EAAE,GAAG,CAAE,EACzCC,KAAK,GAAGJ,IAAI,CAACO,EAAE,GAAG,CAAC,GAAGH,KAAK;IAC/BZ,WAAW,CAACY,KAAK,CAAC;IAElBnB,QAAQ,CAACc,QAAQ,CAAC;EACtB,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZ,MAAM8B,UAAU,GAAGC,WAAW,CAACX,WAAW,EAAE,IAAI,GAAEE,IAAI,CAACC,MAAM,EAAE,GAAC,IAAK,CAAC;IACtE,OAAO,MAAMS,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACxB,KAAK,CAAC,CAAC;EAEX,oBAAO;IACH,SAAS,EAAC,YAAY;IACtB,GAAG,EAAEH,QAAS;IACd,GAAG,EAAC,cAAc;IAClB,KAAK,EAAEC,WAAY;IACnB,MAAM,EAAEC,YAAa;IACrB,KAAK,EAAE;MAAE,GAAGC,KAAK;MAAE2B,SAAS,EAAG,UAASpB,QAAS,eAAcE,IAAK;IAAG;EAAE;IAAA;IAAA;IAAA;EAAA,QAC3E;AACN;AAAC,GAlDQb,WAAW;AAAA,KAAXA,WAAW;AAoDpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}