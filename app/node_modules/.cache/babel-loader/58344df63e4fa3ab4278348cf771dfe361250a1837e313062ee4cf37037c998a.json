{"ast":null,"code":"var _jsxFileName = \"/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RenderFella(_ref) {\n  _s();\n  let {\n    imageUrl\n  } = _ref;\n  const canvasRef = useRef(null);\n  const image_width = 100; // Shoud be influenced by actual size of shark\n  const image_height = 100;\n  const image = useMemo(() => {\n    const img = new Image();\n    img.src = imageUrl;\n    return img;\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let x = canvas.width / 2;\n    let y = canvas.height / 2;\n    let dx = 0;\n    let dy = 0;\n    let radius = image_height / 2;\n    let intervalCounter = 0;\n    let intervalLimit = 200;\n    let intervalMaxLimit = 200;\n    let direction = {\n      x: 1,\n      y: 0\n    };\n    let moving = true;\n    let flipped = false;\n    let wable = 0;\n    let wable_amplitud = 0.07;\n    let wable_speed = 0.07;\n    function drawFella() {\n      // Get the aspect ratio of the image\n      const ratio = Math.min(image_width / image.width, image_width / image.height);\n\n      // Calculate the new dimensions of the image\n      const newWidth = image.width * ratio;\n      const newHeight = image.height * ratio;\n      let vis_w = image_width;\n      let vis_h = image_height * (1 - Math.abs(Math.sin(wable) * wable_amplitud + (1 - wable_amplitud))) + image_height * (1 - wable_amplitud);\n      let vis_x = x - newWidth / 2;\n      let vis_y = y - newHeight / 2 + newHeight - vis_h;\n      if (flipped) {\n        ctx.save();\n        ctx.translate(canvas.width / 2, canvas.height / 2);\n        ctx.scale(-1, 1);\n        ctx.drawImage(image, -vis_x + canvas.width / 2 - image_width, vis_y - canvas.height / 2, vis_w, vis_h);\n        ctx.restore();\n      } else {\n        ctx.drawImage(image, vis_x, vis_y, vis_w, vis_h);\n      }\n    }\n    function updateBallPosition() {\n      intervalCounter++;\n      wable += wable_speed;\n      if (intervalCounter >= intervalLimit) {\n        intervalCounter = 0;\n        intervalLimit = intervalMaxLimit * Math.random();\n        moving = !moving;\n        direction = {\n          x: Math.random() * 2 - 1,\n          y: Math.random() * 2 - 1\n        };\n        dx = direction.x;\n        dy = direction.y;\n        if (moving) {\n          if (dx < 0) flipped = true;else flipped = false;\n        }\n      }\n      if (moving) {\n        if (x + dx > canvas.width - radius || x + dx < radius) dx = -dx;\n        if (y + dy > canvas.height - radius || y + dy < radius) dy = -dy;\n        x += dx;\n        y += dy;\n      }\n    }\n    function animate() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawFella();\n      updateBallPosition();\n      requestAnimationFrame(animate);\n    }\n    animate();\n  }, [imageUrl, image]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: window.innerWidth,\n    height: window.innerHeight\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 12\n  }, this);\n}\n_s(RenderFella, \"BVdR963ETjitXLYyQ42b0OlIriY=\");\n_c = RenderFella;\nexport default RenderFella;\nvar _c;\n$RefreshReg$(_c, \"RenderFella\");","map":{"version":3,"names":["React","useRef","useEffect","useMemo","RenderFella","imageUrl","canvasRef","image_width","image_height","image","img","Image","src","canvas","current","ctx","getContext","x","width","y","height","dx","dy","radius","intervalCounter","intervalLimit","intervalMaxLimit","direction","moving","flipped","wable","wable_amplitud","wable_speed","drawFella","ratio","Math","min","newWidth","newHeight","vis_w","vis_h","abs","sin","vis_x","vis_y","save","translate","scale","drawImage","restore","updateBallPosition","random","animate","clearRect","requestAnimationFrame","window","innerWidth","innerHeight"],"sources":["/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellas.js"],"sourcesContent":["import React, { useRef, useEffect, useMemo } from 'react';\n\n\nfunction RenderFella({ imageUrl }) {\n    const canvasRef = useRef(null);\n    \n    const image_width = 100; // Shoud be influenced by actual size of shark\n    const image_height = 100;\n    const image = useMemo(() => {\n        const img = new Image();\n        img.src = imageUrl;\n        return img;\n    }, []);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n    \n        let x = canvas.width / 2;\n        let y = canvas.height / 2;\n        let dx = 0;\n        let dy = 0;\n        let radius = image_height / 2;\n\n        let intervalCounter = 0;\n        let intervalLimit = 200;\n        let intervalMaxLimit = 200;\n\n        let direction = { x: 1, y: 0 };\n\n        let moving = true;\n        let flipped = false;\n\n        let wable = 0;\n        let wable_amplitud = 0.07;\n        let wable_speed = 0.07;\n    \n        function drawFella() {\n            // Get the aspect ratio of the image\n            const ratio = Math.min(image_width / image.width, image_width / image.height);\n\n            // Calculate the new dimensions of the image\n            const newWidth = image.width * ratio;\n            const newHeight = image.height * ratio;\n\n            let vis_w = image_width;\n            let vis_h = ( image_height * (1-Math.abs( Math.sin(wable)*wable_amplitud+(1-wable_amplitud) )) ) + ( image_height*(1-wable_amplitud) );\n            let vis_x = x - newWidth / 2;\n            let vis_y = y - (newHeight / 2) + newHeight - vis_h;\n\n            if (flipped) {\n                ctx.save();\n                ctx.translate(canvas.width / 2, canvas.height / 2);\n                ctx.scale(-1, 1);\n                ctx.drawImage(image, -vis_x + (canvas.width / 2) - image_width, vis_y - canvas.height / 2, vis_w, vis_h);\n                ctx.restore();\n            } else {\n                ctx.drawImage(image, vis_x, vis_y, vis_w, vis_h);\n            }\n        }\n    \n        function updateBallPosition() {\n            intervalCounter++;\n            wable += wable_speed;\n\n            if (intervalCounter >= intervalLimit) {\n                intervalCounter = 0;\n                intervalLimit = intervalMaxLimit * Math.random();\n                moving = !moving;\n                direction = { x: Math.random() * 2 - 1, y: Math.random() * 2 - 1 };\n                dx = direction.x;\n                dy = direction.y;\n                if (moving) {\n                    if (dx < 0) flipped = true;\n                    else flipped = false;\n                }\n            }\n            if (moving) {\n\n                if (x + dx > canvas.width - radius || x + dx < radius)\n                    dx = -dx;\n                if (y + dy > canvas.height - radius || y + dy < radius)\n                    dy = -dy;\n                x += dx;\n                y += dy;\n            }\n        }\n    \n        function animate() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            drawFella();\n            updateBallPosition();\n            requestAnimationFrame(animate);\n        }\n    \n        animate();\n    }, [imageUrl, image]);\n    \n    return <canvas ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />;\n}\n\nexport default RenderFella;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}