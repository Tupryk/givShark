{"ast":null,"code":"var _jsxFileName = \"/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellas.js\";\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SharkFella extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageUrl = props.imageUrl;\n  }\n  render() {\n    const canvasRef = useRef(null);\n    const image_width = 64; // Shoud be influenced by actual size of shark\n    const image = useMemo(() => {\n      const img = new Image();\n      img.src = this.imageUrl;\n      return img;\n    }, []);\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      let x = canvas.width / 2;\n      let y = canvas.height / 2;\n      let dx = 2;\n      let dy = -2;\n      let radius = image_width / 2;\n      function drawBall() {\n        ctx.drawImage(image, x - image_width / 2, y - image_width / 2, image_width, image_width);\n      }\n      function updateBallPosition() {\n        if (x + dx > canvas.width - radius || x + dx < radius) dx = -dx;\n        if (y + dy > canvas.height - radius || y + dy < radius) dy = -dy;\n        x += dx;\n        y += dy;\n      }\n      function animate() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        drawBall();\n        updateBallPosition();\n        requestAnimationFrame(animate);\n      }\n      animate();\n    }, [imageUrl, image]);\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: window.innerWidth,\n      height: window.innerHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default SharkFella;","map":{"version":3,"names":["React","useRef","useEffect","useMemo","SharkFella","Component","constructor","props","imageUrl","render","canvasRef","image_width","image","img","Image","src","canvas","current","ctx","getContext","x","width","y","height","dx","dy","radius","drawBall","drawImage","updateBallPosition","animate","clearRect","requestAnimationFrame","window","innerWidth","innerHeight"],"sources":["/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellas.js"],"sourcesContent":["import React, { useRef, useEffect, useMemo } from 'react';\n\n\nclass SharkFella extends React.Component {\n    constructor(props) {\n        super(props);\n        this.imageUrl = props.imageUrl;\n    }\n    render() {\n        const canvasRef = useRef(null);\n\n        const image_width = 64; // Shoud be influenced by actual size of shark\n        const image = useMemo(() => {\n            const img = new Image();\n            img.src = this.imageUrl;\n            return img;\n        }, []);\n    \n        useEffect(() => {\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n        \n            let x = canvas.width / 2;\n            let y = canvas.height / 2;\n            let dx = 2;\n            let dy = -2;\n            let radius = image_width / 2;\n        \n            function drawBall() {\n                ctx.drawImage(image, x - image_width / 2, y - image_width / 2, image_width, image_width);\n            }\n        \n            function updateBallPosition() {\n                if (x + dx > canvas.width - radius || x + dx < radius)\n                    dx = -dx;\n                if (y + dy > canvas.height - radius || y + dy < radius)\n                    dy = -dy;\n                x += dx;\n                y += dy;\n            }\n        \n            function animate() {\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                drawBall();\n                updateBallPosition();\n                requestAnimationFrame(animate);\n            }\n        \n            animate();\n        }, [imageUrl, image]);\n    \n        return <canvas ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />;\n    }\n}\n\nexport default SharkFella;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAAC;AAG1D,MAAMC,UAAU,SAASJ,KAAK,CAACK,SAAS,CAAC;EACrCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;EAClC;EACAC,MAAM,GAAG;IACL,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;IAE9B,MAAMU,WAAW,GAAG,EAAE,CAAC,CAAC;IACxB,MAAMC,KAAK,GAAGT,OAAO,CAAC,MAAM;MACxB,MAAMU,GAAG,GAAG,IAAIC,KAAK,EAAE;MACvBD,GAAG,CAACE,GAAG,GAAG,IAAI,CAACP,QAAQ;MACvB,OAAOK,GAAG;IACd,CAAC,EAAE,EAAE,CAAC;IAENX,SAAS,CAAC,MAAM;MACZ,MAAMc,MAAM,GAAGN,SAAS,CAACO,OAAO;MAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MAEnC,IAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAK,GAAG,CAAC;MACxB,IAAIC,CAAC,GAAGN,MAAM,CAACO,MAAM,GAAG,CAAC;MACzB,IAAIC,EAAE,GAAG,CAAC;MACV,IAAIC,EAAE,GAAG,CAAC,CAAC;MACX,IAAIC,MAAM,GAAGf,WAAW,GAAG,CAAC;MAE5B,SAASgB,QAAQ,GAAG;QAChBT,GAAG,CAACU,SAAS,CAAChB,KAAK,EAAEQ,CAAC,GAAGT,WAAW,GAAG,CAAC,EAAEW,CAAC,GAAGX,WAAW,GAAG,CAAC,EAAEA,WAAW,EAAEA,WAAW,CAAC;MAC5F;MAEA,SAASkB,kBAAkB,GAAG;QAC1B,IAAIT,CAAC,GAAGI,EAAE,GAAGR,MAAM,CAACK,KAAK,GAAGK,MAAM,IAAIN,CAAC,GAAGI,EAAE,GAAGE,MAAM,EACjDF,EAAE,GAAG,CAACA,EAAE;QACZ,IAAIF,CAAC,GAAGG,EAAE,GAAGT,MAAM,CAACO,MAAM,GAAGG,MAAM,IAAIJ,CAAC,GAAGG,EAAE,GAAGC,MAAM,EAClDD,EAAE,GAAG,CAACA,EAAE;QACZL,CAAC,IAAII,EAAE;QACPF,CAAC,IAAIG,EAAE;MACX;MAEA,SAASK,OAAO,GAAG;QACfZ,GAAG,CAACa,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEf,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACO,MAAM,CAAC;QAChDI,QAAQ,EAAE;QACVE,kBAAkB,EAAE;QACpBG,qBAAqB,CAACF,OAAO,CAAC;MAClC;MAEAA,OAAO,EAAE;IACb,CAAC,EAAE,CAACtB,QAAQ,EAAEI,KAAK,CAAC,CAAC;IAErB,oBAAO;MAAQ,GAAG,EAAEF,SAAU;MAAC,KAAK,EAAEuB,MAAM,CAACC,UAAW;MAAC,MAAM,EAAED,MAAM,CAACE;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAC3F;AACJ;AAEA,eAAe/B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}