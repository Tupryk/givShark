{"ast":null,"code":"var _jsxFileName = \"/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellas.js\";\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SharkFella extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageUrl = props.imageUrl;\n  }\n  render() {\n    /*\n    const canvasRef = useRef(null);\n     const image_width = 64; // Shoud be influenced by actual size of shark\n    const image = useMemo(() => {\n        const img = new Image();\n        img.src = this.imageUrl;\n        return img;\n    }, []);\n         useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n    \n        let x = canvas.width / 2;\n        let y = canvas.height / 2;\n        let dx = 2;\n        let dy = -2;\n        let radius = image_width / 2;\n    \n        function drawBall() {\n            ctx.drawImage(image, x - image_width / 2, y - image_width / 2, image_width, image_width);\n        }\n    \n        function updateBallPosition() {\n            if (x + dx > canvas.width - radius || x + dx < radius)\n                dx = -dx;\n            if (y + dy > canvas.height - radius || y + dy < radius)\n                dy = -dy;\n            x += dx;\n            y += dy;\n        }\n    \n        function animate() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            drawBall();\n            updateBallPosition();\n            requestAnimationFrame(animate);\n        }\n    \n        animate();\n    }, [imageUrl, image]);\n    \n    return <canvas ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />;\n    */\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: this.imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default SharkFella;","map":{"version":3,"names":["React","useRef","useEffect","useMemo","SharkFella","Component","constructor","props","imageUrl","render"],"sources":["/Users/tupryk/Documents/Projects/icanhazshark/app/src/modules/SharkFellas.js"],"sourcesContent":["import React, { useRef, useEffect, useMemo } from 'react';\n\n\nclass SharkFella extends React.Component {\n    constructor(props) {\n        super(props);\n        this.imageUrl = props.imageUrl;\n    }\n    render() {\n        /*\n        const canvasRef = useRef(null);\n\n        const image_width = 64; // Shoud be influenced by actual size of shark\n        const image = useMemo(() => {\n            const img = new Image();\n            img.src = this.imageUrl;\n            return img;\n        }, []);\n    \n        useEffect(() => {\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n        \n            let x = canvas.width / 2;\n            let y = canvas.height / 2;\n            let dx = 2;\n            let dy = -2;\n            let radius = image_width / 2;\n        \n            function drawBall() {\n                ctx.drawImage(image, x - image_width / 2, y - image_width / 2, image_width, image_width);\n            }\n        \n            function updateBallPosition() {\n                if (x + dx > canvas.width - radius || x + dx < radius)\n                    dx = -dx;\n                if (y + dy > canvas.height - radius || y + dy < radius)\n                    dy = -dy;\n                x += dx;\n                y += dy;\n            }\n        \n            function animate() {\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                drawBall();\n                updateBallPosition();\n                requestAnimationFrame(animate);\n            }\n        \n            animate();\n        }, [imageUrl, image]);\n        \n        return <canvas ref={canvasRef} width={window.innerWidth} height={window.innerHeight} />;\n        */\n        return <p>{this.imageUrl}</p>;\n    }\n}\n\nexport default SharkFella;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAAC;AAG1D,MAAMC,UAAU,SAASJ,KAAK,CAACK,SAAS,CAAC;EACrCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;EAClC;EACAC,MAAM,GAAG;IACL;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAGQ,oBAAO;MAAA,UAAI,IAAI,CAACD;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK;EACjC;AACJ;AAEA,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}